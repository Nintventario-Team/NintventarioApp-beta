name: Build and Release APK and iOS

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build APK and iOS
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.22.1'

    - name: Install Dependencies
      run: flutter pub get

    - name: Build APK
      if: contains(github.event.head_commit.message, '/build_apk')
      run: flutter build apk

    - name: Build iOS
      if: contains(github.event.head_commit.message, '/build_ios')
      run: flutter build ios

    - name: Create Release
      id: create_release
      if: contains(github.event.head_commit.message, '/build_apk') || contains(github.event.head_commit.message, '/build_ios')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1-${{ github.run_number }}
        release_name: Release v1-${{ github.run_number }}
        body: |
          Automatic build triggered by commit message.
        draft: false
        prerelease: false

    - name: Upload APK
      if: contains(github.event.head_commit.message, '/build_apk')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/app/outputs/flutter-apk/app-release.apk
        asset_name: Nintventario.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Upload iOS App
      if: contains(github.event.head_commit.message, '/build_ios')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/ios/ipa/MyApp.ipa
        asset_name: Nintventario.ipa
        asset_content_type: application/octet-stream

